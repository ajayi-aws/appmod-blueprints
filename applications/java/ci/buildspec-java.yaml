version: 0.2


env:
    variables:
      IMAGE_TAG : "1.2"
      AWS_DEFAULT_REGION: "us-west-2"
      JAVA_IMAGE_REPO_NAME: "appmod-java-ecr"
      
phases:
  install:
    runtime-versions:
      python: 3.11
      
  pre_build:
    commands:
      - echo "STARTING PYTHON INSTALLATION"
      - pip3 install git-remote-codecommit
      - echo Logging in to CodeCommit
      - mkdir /opt/gradle
      - wget -cq https://services.gradle.org/distributions/gradle-8.4-bin.zip
      - unzip -q -d /opt/gradle gradle-8.4-bin.zip
      - export PATH=$PATH:/opt/gradle/gradle-8.4/bin
      - yum -y -q install docker java-1.8.0
      - rm -rf gradle-8.4-bin.zip
      - git clone codecommit://appmod-workshop
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - cd appmod-workshop/applications/java/src
      - gradle clean build
      - cp build/libs/*.war .
      - docker build -t$JAVA_IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $JAVA_IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/appmod-java-ecr:$IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/appmod-java-ecr:$IMAGE_TAG
      - echo Build completed on `date`
      - echo "Updating the application version"
      - echo "Current path is"
      - pwd
      - cd ../../../deployment/teams/team-j/dev
      - myvar=`grep image java-application.yaml |head -1| awk -F':' '{print $3}'`
      - sed -i "s/$myvar/$IMAGE_TAG/g" java-application.yaml
      - cd ../../../..
      - git config --global user.email "codebuild@email.com"
      - git config --global user.name "CodeBuild user"
      - git add -A
      - git commit -m "Changed DEV Version $myvar"
      - git push
